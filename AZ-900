Youtube Video :
https://m.youtube.com/watch?v=-pX5PjIYTJs&list=PL9E5VlpXL2EKBDA9KL8r2_JDKMtqh084V&index=3

Concepts :
# What is cloud computing :
  https://learn.microsoft.com/en-us/training/modules/describe-cloud-compute/3-what-cloud-compute

# Responsibility Model :
  https://learn.microsoft.com/en-us/training/modules/describe-cloud-compute/4-describe-shared-responsibility-model

# IaaS (Infrastructure as a Service)
    - Make Your Own Pizza at Home
      You buy raw ingredients (dough, sauce, cheese) and kitchen tools (oven, rolling pin)
      You have full control over how to cook it — but you also have to do everything yourself: prepping, baking, cleaning, etc.
    - Example,
      Renting a virtual machine from AWS EC2. You decide the OS, software, and settings
      You also handle updates, security patches, and backups

    - You manage :
         Data, devices, accounts, applications, network controls, and operating system.
      Cloud provider manages :
         Physical servers, network hardware, and data centers


# PaaS (Platform as a Service)
    - Pizza Base Ready, You Add Toppings
      The pizza base is already baked for you; you just add your favorite toppings and bake it for a bit
      You don’t worry about making dough or cleaning the mess — that’s handled by someone else
    - Example,
      Azure App Service. You focus only on your app’s code
      While Azure handles the OS, server updates, and backups

    - You manage :
         Data, devices, accounts, and your specific applications
      Cloud provider manages :
         Operating system, infrastructure, and networking


# SaaS (Software as a Service)
    - Order Pizza from a Restaurant
      You just order the pizza and eat it
      No cooking, no cleaning, no prep — everything is done for you
    - Example,
      Gmail, Dropbox, Office 365. You simply log in and use the service
      All the backend work is handled by the provider

    - You manage :
         Only your data, devices, and logins
      Cloud provider manages :
         Apps, OS, infrastructure, networking


# Development Environment (Dev)
  - This is where developers write and test code

# UAT Environment (User Acceptance Testing)
  - After development and internal testing, the code goes here for business users/testers to check

# Production Environment (Prod)
  - This is the live environment — the real app that actual customers use


# Cloud Models :
  https://learn.microsoft.com/en-us/training/modules/describe-cloud-compute/5-define-cloud-models

# Private Cloud
  - Think of this as your own personal cloud. It's built just for one company or organization
  - It offers maximum control, privacy, and security—but it's also costlier and lacks some of the flexibility a public cloud offers
  - It might be hosted in your own data center or by a third party, but exclusively dedicated to your use
    - High capital investment (hardware, maintenance)
    - Full control, tailored security
    - Scaling takes time and investment
    - Example,
      A bank or government agency needing tight control over data and compliance. They host their cloud internally (or via a private service) to manage security themselves

# Public Cloud
  - This is like renting a room in a shared building—anyone can access it
  - Owned and managed by big providers like Microsoft, AWS, or Google, it offers fast setup, scalability, and pay-as-you-go pricing, making it very flexible and cost-efficient
    - No big upfront cost; pay-as-you-go
    - Less control, shared resources
    - Very quick and easy to scale
    - Example,
      A startup launching an app quickly without investing in servers. They use Azure to get going fast and affordably

# Hybrid Cloud
  - As the name implies, it's a mix of both private and public clouds working together
  - You might store sensitive data in your private cloud, then use public cloud space to handle extra demand or scalability. It gives you the best of both worlds—control and flexibility
    - Mix: manage base costs privately, scale using public cloud when needed
    - Flexible control, choose where workloads run
    - Flexible—can burst into public cloud as needed
    - Example,
      An e-commerce business hosts sensitive customer data privately but relies on public cloud during high traffic events (like Black Friday) to handle the spike in demand

# Multi-cloud
  - This means using more than one cloud provider (like Azure + AWS + Google Cloud)
  - Maybe each cloud has different special features you want
  - Or maybe you started with one and are moving to another, so you temporarily use both

# Azure Arc
  - Azure Arc is a management tool from Microsoft, it helps you manage your systems whether they are :
    Only on Azure,
    On your company’s private datacenter,
    A hybrid mix of both,
    Or spread across multiple clouds (multi-cloud).
    In short, Arc makes it easier to control everything from one place

# Azure VMware Solution
  - Some companies already use VMware (a virtualization platform) in their own datacenters (private cloud)
    If they want to move to the cloud, they don’t need to throw away VMware
    Azure VMware Solution lets them run VMware inside Azure.
    This makes moving to Azure much smoother — they can keep using what they know, but with cloud scalability.


# Describe the consumption-based model
  https://learn.microsoft.com/en-us/training/modules/describe-cloud-compute/6-describe-consumption-based-model


# Addtional Notes :
  - Shared Resposibility Model
    https://learn.microsoft.com/en-us/azure/security/fundamentals/shared-responsibility

  - VMware Solutions
    https://learn.microsoft.com/en-us/training/modules/intro-azure-vmware-solution/

  - Hybrid Cloud Solutions
    https://learn.microsoft.com/en-us/training/modules/intro-to-azure-hybrid-services/


# Availability and scalability in the cloud
  https://learn.microsoft.com/en-gb/training/modules/describe-benefits-use-cloud-services/2-high-availability-scalability-cloud


# Reliability and predictability in the cloud
  https://learn.microsoft.com/en-us/training/modules/describe-benefits-use-cloud-services/3-reliability-predictability-cloud?ns-enrollment-type=learningpath&ns-enrollment-id=learn.wwl.microsoft-azure-fundamentals-describe-cloud-concepts

  - Reliability in the Cloud
    Reliability in cloud computing refers to a system's ability to consistently perform its intended functions and recover from failures without significant downtime
    Cloud providers achieve this through:
      Redundancy        : Having multiple copies of data and services across different data centers. If one fails, another takes over automatically
      Fault Tolerance   : Designing systems that can continue to operate even if some components fail
      Disaster Recovery : Having a plan to quickly restore services in the event of a major outage or disaster

  - Predictability in the Cloud  
    Predictability is the ability to anticipate and manage how a cloud service will perform over time
    This includes both performance and cost
      Performance Predictability : This means you can count on your applications to have consistent performance
                                   Even when user demand suddenly increases
                                   Cloud services use features like autoscaling to automatically add more resources (like servers) during peak traffic and remove them when demand is low, maintaining smooth operation.
      Cost Predictability        : This involves being able to forecast your expenses
                                   Cloud providers offer tools and pricing models that allow you to estimate your costs based on your usage, helping you avoid unexpected bills


# DDos Attack :
  A Distributed Denial-of-Service (DDoS) attack is a type of cybercrime that floods a website, server, or network with a massive amount of internet traffic
  The purpose is to overwhelm the target, making it slow down or completely unavailable to legitimate users
  The key word here is "distributed" instead of the attack coming from a single source, a DDoS attack uses a network of many compromised computers or devices, often called a "botnet" to send the malicious traffic
  
  - How It Works
      - Infection         : Attackers infect thousands of internet-connected devices (like computers, smartphones, and IoT devices) with malware, turning them into "bots" or "zombies"
      - Botnet Creation   : The attacker controls all these bots remotely, forming a large network called a botnet
      - Attack Launch     : The attacker then commands the botnet to simultaneously flood a target (e.g., a bank's website) with a huge volume of fake requests
      - Denial of Service : The targeted server, unable to handle the overwhelming flood of traffic becomes overloaded and crashes or is too slow to respond to real customers, effectively denying service
  
  - This method makes the attack much harder to stop because the traffic is coming from thousands of different places, making it difficult to distinguish between legitimate users and malicious bots


# Manageability in the cloud
  https://learn.microsoft.com/en-us/training/modules/describe-benefits-use-cloud-services/5-manageability-cloud
 
  -  Manageability in the cloud refers to how easy it is to monitor, operate, and control your cloud resources and services
     It's about having the right tools and automation to handle your IT environment efficiently
  -  Cloud providers offer tools like a web portal, command line interface (CLI), and APIs that allow you to manage your resources
     This means you can automate tasks like,
        Deploying updates to all your servers at once
        Monitoring performance and getting alerts if something is wrong
        Scaling resources up or down automatically based on demand

# Orchestration Mode
  Uniform Orchestration Mode
    - It is designed for large-scale, identical virtual machines (VMs), It's the original and more traditional mode for VM scale sets
      This mode creates VMs from a single, predefined template
      Every VM in the scale set has the exact same configuration, including size, disk type, and network settings
      You can't have different VM sizes or disk configurations within the same uniform scale set
      Uniform mode creates identical VM instances. While you can manage individual VMs, they all share the same blueprint
    - Use Cases
        It's the best choice when you need a large number of stateless VMs that perform the same task
        Auto-scaling, This is where uniform mode excels. It's built to automatically scale out (add more instances) or scale in (remove instances) based on metric-based triggers, ensuring your application can handle varying loads
        Stateless Applications, Ideal for web servers, high-performance computing (HPC) clusters, or any application where a new VM instance can be spun up and immediately start serving traffic without any unique configuration
  
  Flexible Orchestration Mode
    - The flexible orchestration mode is a newer, more versatile option.  It allows for greater control over individual VMs within the scale set
      This mode does not require all VMs to be identical
      You can create VMs with different configurations, including different sizes, disk types, and network settings, all within the same scale set
      This is a significant difference from uniform mode
      Flexible mode allows for full control over individual VM instances
      You can manage, update, and even delete specific VMs independently without affecting the entire scale set
    - Use Cases
        It's used when you need the benefits of a scale set, like high availability and fault domains, but your VMs require different configurations or are stateful
        Heterogeneous Workloads, Useful for deploying a cluster where different roles require different VM sizes (e.g., a database VM and a front-end server VM)
        Hybrid Applications, Combines the benefits of VM scale sets with the granular control of individual VMs. It's great for stateful applications where each VM might hold unique data or have a specific role that makes it non-interchangeable
        Auto-scaling, Flexible mode also supports auto-scaling, allowing you to add or remove VMs dynamically, just like uniform mode

# VM scale sets support both auto-scaling and manual scaling.
    - Auto-scaling
        The scale set automatically adds or removes VMs based on predefined rules (e.g., CPU usage, memory, network traffic). This is the key feature for handling fluctuating workloads
    - Manual scaling
        You can manually increase or decrease the instance count of the scale set. This is useful for planned events or for specific, non-automated changes

# Both Azure VMs and VMSS ultimately create operating system instances, but their core purpose and the scenarios they are designed for are fundamentally different
  Here's the key distinction:
    Azure VM is for a single, independent OS instance. It's like having a standalone computer
    You create it when you need a dedicated server for a specific task that doesn't require automatic scaling, such as a single database server, a legacy application, or a personal virtual desktop for an employee
    
    Azure VMSS is for a group of identical OS instances that are treated as a single unit
    It's like having an entire fleet of identical computers that can automatically grow or shrink based on demand
    You use it for scenarios that require high availability, load balancing, and auto-scaling, such as a public-facing website or a web API that needs to handle unpredictable traffic spikes

    So, while both services result in an OS being created,
    the difference lies in the management model and the underlying use case. One is for individual, granular control, and the other is for dynamic, scaled-out workloads







